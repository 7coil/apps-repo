name: app submissions

on:
  pull_request:
    branches:
      - main
    paths:
      - 'packages/**'

jobs:
  app-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16.x'

      - name: Install dependencies
        run: |
          python3 -m pip install -r ./requirements.txt
          python3 -m pip install yq
          npm install -g @webosbrew/compat-checker

      - name: Check changed packages
        id: changed_files
        uses: dorny/paths-filter@v2
        with:
          list-files: shell

          filters: |
            packages:
              - added|modified: 'packages/**'

      - name: Lint package information
        id: lint_package
        if: ${{ steps.changed_files.outputs.packages == 'true' }}
        continue-on-error: true
        run: |
          export lint_retcode=0

          for changed_file in ${{ steps.changed_files.outputs.packages_files }}; do
            echo "## Check Result for $(basename ${changed_file}):" >> /tmp/lint-report.md
            echo >> /tmp/lint-report.md

            echo '### Metadata Lint Result' >> /tmp/lint-report.md
            echo >> /tmp/lint-report.md

            python3 -m repogen.lintpkg -f "${changed_file}" >> /tmp/lint-report.md || export lint_retcode=1
            echo >> /tmp/lint-report.md

            ipkfile=/tmp/$(sha256sum "${changed_file}" | cut -d ' ' -f 1).ipk
            python3 -m repogen.downloadipk -i ${changed_file} -o "${ipkfile}"
            echo '### Compatibility Check Result' >> /tmp/lint-report.md
            webosbrew-ipk-compat-checker -m -u -q "${ipkfile}" >> /tmp/lint-report.md || export lint_retcode=1
          done
          exit ${lint_retcode}

      - name: Report check result
        uses: actions/github-script@v5
        if: ${{ !env.ACT }}
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
             const fs = require('fs')
             github.rest.issues.createComment({
               issue_number: context.issue.number,
               owner: context.repo.owner,
               repo: context.repo.repo,
               body: fs.readFileSync('/tmp/lint-report.md', 'utf-8')
             })

      - name: Print check result (local test)
        if: ${{ env.ACT }}
        run: cat /tmp/lint-report.md